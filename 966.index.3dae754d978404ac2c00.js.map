{"version":3,"sources":["webpack://@dappconnect/mainnet-poll-sdk-example/../node_modules/js-waku/build/module/lib/waku_message/symmetric/node.js"],"names":[],"mappings":"uSAEA,KAAM,GAAY,cACX,iBAAuB,EAAI,EAAK,EAAW,CAC9C,KAAM,GAAS,SAAe,EAAW,EAAK,GACxC,EAAI,EAAO,OAAO,GAClB,EAAI,EAAO,QACX,EAAM,EAAO,aACnB,MAAO,GAAO,OAAO,CAAC,EAAG,EAAG,IAEzB,iBAAuB,EAAI,EAAK,EAAM,CACzC,KAAM,GAAW,EAAK,OAAS,KACzB,EAAa,EAAK,MAAM,EAAG,GAC3B,EAAM,EAAK,MAAM,GACjB,EAAW,SAAiB,EAAW,EAAK,GAClD,EAAS,WAAW,GACpB,KAAM,GAAI,EAAS,OAAO,GACpB,EAAI,EAAS,QACnB,MAAO,GAAO,OAAO,CAAC,EAAG,IAEtB,YAAsC,CACzC,MAAO,SAAY,MAEhB,YAAsB,CACzB,MAAO,SAAY","file":"966.index.3dae754d978404ac2c00.js","sourcesContent":["import { createCipheriv, createDecipheriv, randomBytes } from 'crypto';\nimport { IvSize, SymmetricKeySize, TagSize } from './index';\nconst Algorithm = 'aes-256-gcm';\nexport async function encrypt(iv, key, clearText) {\n    const cipher = createCipheriv(Algorithm, key, iv);\n    const a = cipher.update(clearText);\n    const b = cipher.final();\n    const tag = cipher.getAuthTag();\n    return Buffer.concat([a, b, tag]);\n}\nexport async function decrypt(iv, key, data) {\n    const tagStart = data.length - TagSize;\n    const cipherText = data.slice(0, tagStart);\n    const tag = data.slice(tagStart);\n    const decipher = createDecipheriv(Algorithm, key, iv);\n    decipher.setAuthTag(tag);\n    const a = decipher.update(cipherText);\n    const b = decipher.final();\n    return Buffer.concat([a, b]);\n}\nexport function generateKeyForSymmetricEnc() {\n    return randomBytes(SymmetricKeySize);\n}\nexport function generateIv() {\n    return randomBytes(IvSize);\n}\n//# sourceMappingURL=node.js.map"],"sourceRoot":""}